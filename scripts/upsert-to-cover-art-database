#!/usr/bin/php
<?
require_once('/standardebooks.org/web/lib/Core.php');

$longopts = ['repoDir:', 'workDir:', 'ebookWwwFilesystemPath:', 'verbose'];
$options = getopt('v', $longopts);

$repoDir = $options['repoDir'] ?? false;
$workDir = $options['workDir'] ?? false;
$ebookWwwFilesystemPath = $options['ebookWwwFilesystemPath'] ?? false;

$verbose = false;
if(isset($options['v']) || isset($options['verbose'])){
	$verbose = true;
}

/**
 * Coverts SimpleXMLElement objects with inner tags like this:
 *   '<abbr>Mr.</abbr>Â Smith'
 * to:
 *   'Mr. Smith'
 */
function StripInnerTags($elements): ?string{
	if($elements === false){
		return null;
	}

	if(isset($elements[0])){
		return strip_tags($elements[0]->asXML());
	}

	return null;
}

if(!$repoDir || !$workDir || !$ebookWwwFilesystemPath){
	print("Expected usage: upsert-to-cover-art-database [-v] --repoDir <dir> --workDir <dir> --ebookWwwFilesystemPath <path>\n");
	exit(1);
}

if($verbose){
	print("\nrepoDir: $repoDir\n");
	print("workDir: $workDir\n");
	print("ebookWwwFilesystemPath: $ebookWwwFilesystemPath\n");
}

chdir($repoDir);
$contentOpf = shell_exec("git show HEAD:src/epub/content.opf");
$xml = new SimpleXMLElement(str_replace('xmlns=', 'ns=', $contentOpf));
$xml->registerXPathNamespace('dc', 'http://purl.org/dc/elements/1.1/');
$artistName = StripInnerTags($xml->xpath('/package/metadata/dc:contributor[@id="artist"]'));
if($artistName === null){
	print("Error: Could not find artist name in content.opf\n");
	exit('Error: missing artistName');
}

if(!file_exists($ebookWwwFilesystemPath . '/text/colophon.xhtml')){
	exit('Error: no text/colophon.xhtml at ' . $ebookWwwFilesystemPath);
}

$rawColophon = file_get_contents($ebookWwwFilesystemPath . '/text/colophon.xhtml');
if(empty($rawColophon)){
	exit('Error: empty colophon at ' . $ebookWwwFilesystemPath);
}

preg_match('|a painting completed \w+ (\d+)|ius', $rawColophon, $matches);
$completedYear = null;
if(sizeof($matches) == 2){
	$completedYear = (int)$matches[1];
}

$colophonXml = new SimpleXMLElement(str_replace('xmlns=', 'ns=', $rawColophon));
$artworkName = StripInnerTags($colophonXml->xpath('/html/body/main/section/p/i[@epub:type="se:name.visual-art.painting"]'));
if($artworkName === null){
	print("Error: Could not find artwork name in colophon.xhtml\n");
	exit('Error: missing artworkName');
}

$artistUrlName = Formatter::MakeUrlSafe($artistName);
$artworkUrlName = Formatter::MakeUrlSafe($artworkName);

if($verbose){
	print("artistName: $artistName\n");
	print("artistUrlName: $artistUrlName\n");
	print("completedYear: $completedYear\n");
	print("artworkName: $artworkName\n");
	print("artworkUrlName: $artworkUrlName\n");
}

$artwork = Artwork::GetByUrlPath($artistUrlName, $artworkUrlName);

if($artwork === null){
	if($verbose){
		printf("No existing artwork found at %s/%s, inserting new artwork.\n", $artistUrlName, $artworkUrlName);
	}

	// The ebook colophon provides the artist's name, but not their death year.
	// Prefer matching an existing artist to creating a new record with a null death year if possible.
	$artist = Artist::FindMatch($artistName);
	if($artist === null){
		$artist = new Artist();
		$artist->Name = $artistName;
	}

	$artwork = new Artwork();
	$artwork->Artist = $artist;
	$artwork->Name = $artworkName;
	$artwork->CompletedYear = $completedYear;
	$artwork->CompletedYearIsCirca = false;
	$artwork->Created = new DateTime();
	$artwork->Status = 'in_use';
	$artwork->EbookWwwFilesystemPath = $ebookWwwFilesystemPath;

	$coverSourceFile = tempnam($workDir, 'cover.source.jpg.');
	// Doesn't handle repos with PNG instead of JPEG source files, i.e., images/cover.source.png
	exec("git show HEAD:images/cover.source.jpg > $coverSourceFile", $shellOutput, $resultCode);
	if($resultCode !== 0){
		exit('Error: no images/cover.source.jpg in ' . $repoDir);
	}

	$artwork->CreateFromFilesystem($coverSourceFile);
}
else{
	if($verbose){
		printf("Existing artwork found at %s/%s, updating its status.\n", $artistUrlName, $artworkUrlName);
	}

	if($artwork->CompletedYear != $completedYear){
		printf("Error: Existing database artwork completed year, %d, does not match ebook colophon completed year, %d. Not updating database.\n", $artwork->CompletedYear, $completedYear);
		exit('Error: completed year');
	}

	if($artwork->Status === 'in_use'){
		printf("Error: Existing database artwork already marked as 'in_use' by ebook '%s'. Not updating database.\n", $artwork->EbookWwwFilesystemPath);
		exit('Error: in_use');
	}

	$artwork->MarkInUse($ebookWwwFilesystemPath);
}
